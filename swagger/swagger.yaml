basePath: /
definitions:
  dto.LoginResponse:
    properties:
      access_token:
        type: string
      role:
        type: string
      token_type:
        type: string
      user_id:
        type: integer
    type: object
  dto.StProfile:
    properties:
      department:
        type: string
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      photoUrl:
        type: string
      studentCard:
        type: string
      year:
        type: integer
    type: object
  dto.StWorkPlenty:
    properties:
      works:
        items:
          $ref: '#/definitions/dto.StWorkResp'
        type: array
    type: object
  dto.StWorkResp:
    properties:
      is_started:
        type: boolean
      work:
        $ref: '#/definitions/dto.WorkResp'
    type: object
  dto.SubjectResp:
    properties:
      department:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  dto.SvProfile:
    properties:
      about:
        type: string
      avatarUrl:
        type: string
      birthdate:
        type: string
      department:
        type: string
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
    type: object
  dto.SvWorkPlenty:
    properties:
      works:
        items:
          $ref: '#/definitions/dto.SvWorkResp'
        type: array
    type: object
  dto.SvWorkResp:
    properties:
      is_full:
        type: boolean
      is_head:
        type: boolean
      work:
        $ref: '#/definitions/dto.WorkResp'
    type: object
  dto.WorkKindResp:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  dto.WorkResp:
    properties:
      description:
        type: string
      id:
        type: integer
      kind:
        $ref: '#/definitions/dto.WorkKindResp'
      semester:
        type: integer
      subject:
        $ref: '#/definitions/dto.SubjectResp'
    type: object
host: localhost:8080
info:
  contact:
    email: ivahnencko01@gmail.com
    name: Ivakhnenko Dmitry, Moscow
    url: github.com/ivaahn/ssr
  description: Student-Supervisor Relationships
  title: SSR Application
  version: 0.1.0
paths:
  /api/auth/login:
    post:
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - description: User email
        in: formData
        name: username
        required: true
        type: string
      - description: User password
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.LoginResponse'
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Login into account
      tags:
      - auth
  /api/v1/students/{student_id}/profile:
    get:
      parameters:
      - description: Student ID
        in: path
        name: student_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.StProfile'
        "404":
          description: Not Found
      security:
      - OAuth2Password: []
      summary: Get student's profile
      tags:
      - student
  /api/v1/students/{student_id}/works:
    get:
      parameters:
      - description: Student ID
        in: path
        name: student_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.StWorkPlenty'
      security:
      - OAuth2Password: []
      summary: Get student's works
      tags:
      - student
  /api/v1/supervisors/{supervisor_id}/profile:
    get:
      parameters:
      - description: Supervisor ID
        in: path
        name: supervisor_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.SvProfile'
      security:
      - OAuth2Password: []
      summary: Get supervisor's profile
      tags:
      - supervisor
  /api/v1/supervisors/{supervisor_id}/works:
    get:
      parameters:
      - description: Supervisor ID
        in: path
        name: supervisor_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.SvWorkPlenty'
      security:
      - OAuth2Password: []
      summary: Get supervisor's works
      tags:
      - supervisor
schemes:
- http
securityDefinitions:
  OAuth2Password:
    flow: password
    tokenUrl: http://localhost:8080/api/v1/auth/login
    type: oauth2
swagger: "2.0"
