basePath: /
definitions:
  dto.ApplyBid:
    properties:
      studentID:
        type: integer
      supervisorID:
        type: integer
      workID:
        type: integer
    type: object
  dto.ApplyBidResp:
    properties:
      bidID:
        type: integer
    type: object
  dto.CreateSSR:
    properties:
      bidID:
        type: integer
      studentID:
        type: integer
    type: object
  dto.FeedbackAddResp:
    properties:
      feedback_id:
        type: integer
    type: object
  dto.FeedbackPlenty:
    properties:
      feedbacks:
        items:
          $ref: '#/definitions/dto.FeedbackResp'
        type: array
    type: object
  dto.FeedbackReq:
    properties:
      content:
        type: string
      studentID:
        type: integer
      supervisorID:
        type: integer
      workID:
        type: integer
    type: object
  dto.FeedbackResp:
    properties:
      content:
        type: string
      student_full_name:
        type: string
      studentID:
        type: integer
      supervisorID:
        type: integer
      work_kind:
        type: string
      work_subject:
        type: string
      workID:
        type: integer
    type: object
  dto.LoginResponse:
    properties:
      email:
        type: string
      role:
        type: string
      token:
        type: string
    type: object
  dto.ResolveBid:
    properties:
      accept:
        type: boolean
      bidID:
        type: integer
      supervisorID:
        type: integer
    type: object
  dto.ResolveBidResp:
    properties:
      new_status:
        type: string
    type: object
  dto.StBid:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      status:
        type: string
      supervisor:
        $ref: '#/definitions/dto.SvProfile'
      work:
        $ref: '#/definitions/dto.Work'
    type: object
  dto.StBids:
    properties:
      bids:
        items:
          $ref: '#/definitions/dto.StBid'
        type: array
    type: object
  dto.StProfile:
    properties:
      avatarUrl:
        type: string
      department:
        type: string
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      studentCard:
        type: string
      studentID:
        type: integer
      year:
        type: integer
    type: object
  dto.StViewRelation:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      status:
        type: string
      supervisor:
        $ref: '#/definitions/dto.SvProfile'
      work:
        $ref: '#/definitions/dto.Work'
    type: object
  dto.StWork:
    properties:
      description:
        type: string
      id:
        type: integer
      is_started:
        type: boolean
      kind:
        type: string
      subject:
        type: string
    type: object
  dto.StWorks:
    properties:
      studentID:
        type: integer
      works:
        items:
          $ref: '#/definitions/dto.StWork'
        type: array
    type: object
  dto.SubjectResp:
    properties:
      department:
        type: string
      name:
        type: string
      subjectID:
        type: integer
    type: object
  dto.SvBid:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      status:
        type: string
      student:
        $ref: '#/definitions/dto.StProfile'
      work:
        $ref: '#/definitions/dto.Work'
    type: object
  dto.SvBids:
    properties:
      bids:
        items:
          $ref: '#/definitions/dto.SvBid'
        type: array
    type: object
  dto.SvProfile:
    properties:
      about:
        type: string
      avatarUrl:
        type: string
      birthdate:
        type: string
      department:
        type: string
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      supervisorID:
        type: integer
    type: object
  dto.SvWork:
    properties:
      description:
        type: string
      head:
        type: boolean
      id:
        type: integer
      kind:
        type: string
      subject:
        type: string
    type: object
  dto.SvWorkPlenty:
    properties:
      supervisorID:
        type: integer
      works:
        items:
          $ref: '#/definitions/dto.SvWork'
        type: array
    type: object
  dto.Work:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      semester:
        type: integer
      subject:
        $ref: '#/definitions/dto.SubjectResp'
    type: object
  dto.WorkSv:
    properties:
      about:
        type: string
      avatarUrl:
        type: string
      birthdate:
        type: string
      department:
        type: string
      email:
        type: string
      firstName:
        type: string
      full:
        type: boolean
      head:
        type: boolean
      lastName:
        type: string
      supervisorID:
        type: integer
    type: object
  dto.WorkSvPlenty:
    properties:
      supervisors:
        items:
          $ref: '#/definitions/dto.WorkSv'
        type: array
      workID:
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: ivahnencko01@gmail.com
    name: Ivakhnenko Dmitry, Moscow
    url: github.com/ivaahn/ssr
  description: Student-Supervisor Relationships
  title: SSR Application
  version: 0.1.0
paths:
  /api/auth/login:
    post:
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - description: User email
        in: formData
        name: username
        required: true
        type: string
      - description: User password
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.LoginResponse'
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Login into account
      tags:
      - auth
  /api/student/bid:
    get:
      parameters:
      - description: Student ID
        in: query
        name: student_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.StBids'
        "404":
          description: Not Found
      security:
      - Auth: []
      summary: GetUserInfo student's bids
      tags:
      - student
    put:
      consumes:
      - application/json
      parameters:
      - description: bid info
        in: body
        name: ApplyBid
        required: true
        schema:
          $ref: '#/definitions/dto.ApplyBid'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ApplyBidResp'
      security:
      - Auth: []
      summary: Apply bid
      tags:
      - student
  /api/student/feedback:
    get:
      parameters:
      - description: Supervisor ID
        in: path
        name: supervisor_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.FeedbackPlenty'
      security:
      - Auth: []
      summary: Get feedbacks on the supervisor.
      tags:
      - student
    put:
      consumes:
      - application/json
      parameters:
      - description: feedback info
        in: body
        name: Feedback
        required: true
        schema:
          $ref: '#/definitions/dto.FeedbackReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.FeedbackAddResp'
        "500":
          description: Internal Server Error
      security:
      - Auth: []
      summary: Provide a feedback
      tags:
      - student
  /api/student/profile:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.StProfile'
        "404":
          description: Not Found
      security:
      - Auth: []
      summary: GetUserInfo student's profile
      tags:
      - student
  /api/student/ssr:
    post:
      consumes:
      - application/json
      parameters:
      - description: ssr info
        in: body
        name: ApplyBid
        required: true
        schema:
          $ref: '#/definitions/dto.CreateSSR'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.StViewRelation'
      security:
      - Auth: []
      summary: Start SSR
      tags:
      - student
  /api/student/work:
    get:
      parameters:
      - description: Student ID
        in: query
        name: student_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.StWorks'
      security:
      - Auth: []
      summary: GetUserInfo student's works
      tags:
      - student
  /api/student/work/supervisor:
    get:
      parameters:
      - description: Work ID
        in: query
        name: work_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.WorkSvPlenty'
      security:
      - Auth: []
      summary: GetUserInfo supervisors of the work
      tags:
      - student
  /api/supervisor/bid:
    get:
      parameters:
      - description: Supervisor ID
        in: query
        name: supervisor_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.SvBids'
      security:
      - Auth: []
      summary: GetUserInfo supervisor's bids
      tags:
      - supervisor
  /api/supervisor/bid/resolve:
    post:
      parameters:
      - description: bid info
        in: body
        name: ResolveBid
        required: true
        schema:
          $ref: '#/definitions/dto.ResolveBid'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ResolveBidResp'
      security:
      - Auth: []
      summary: Accept or Decline student's bid
      tags:
      - supervisor
  /api/supervisor/profile:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.SvProfile'
      security:
      - Auth: []
      summary: GetUserInfo supervisor's profile
      tags:
      - supervisor
  /api/supervisor/work:
    get:
      parameters:
      - description: Supervisor ID
        in: query
        name: supervisor_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.SvWorkPlenty'
      security:
      - Auth: []
      summary: GetUserInfo supervisor's works
      tags:
      - supervisor
schemes:
- http
securityDefinitions:
  Auth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
